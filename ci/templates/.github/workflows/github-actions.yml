on: [push, pull_request]
jobs:
  test:
    name: {{ '${{ matrix.name }}' }}
    runs-on: {{ '${{ matrix.os }}' }}
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: 'check'
            python: '3.9'
            tox_env: 'check'
            os: 'linux-latest'
          - name: 'docs'
            python: '3.9'
            tox_env: 'docs'
            os: 'linux-latest'
{% for env in tox_environments %}
{% set python %}
  {%- if env.startswith('pypy3') -%}
    pypy-3.7
  {%- elif env.startswith('pypy') -%}
    pypy-2.7
  {%- elif env.startswith('py310') %}
    3.10-dev
  {%- else -%}
    {{ env[2] }}.{{ env[3] }}
  {%- endif -%}
{% endset %}
{% set cpython %}cp{{ env[2] }}{{ env[3] }}-*{% endset %}
{% for os, arch, platform in [
    ['linux',   'x64', 'native'],
    ['linux',   'x64', 'aarch64'],
    ['windows', 'x64', 'native'],
    ['windows', 'x86', 'native'],
    ['macos',   'x64', 'native'],
] %}
{% if platform == 'native' %}
{% if arch == 'x64' %}
          - name: '{{ env }} ({{ os }})'
{% else %}
          - name: '{{ env }} ({{ os }}/{{ arch }})'
{% endif %}
{% else %}
          - name: '{{ env }} ({{ platform }})'
{% endif %}
            python: '{{ python }}'
            python_arch: '{{ arch }}'
            tox_env: '{{ env }}{% if 'cover' in env %},codecov{% endif %}'
            cibw_arch: '{{ platform }}'
{% if env.endswith('cover') or env.startswith('pypy') %}
            cibw_build: false
{% else %}
            cibw_build: '{{ cpython }}'
{% endif %}
            os: '{{ os }}-latest'
{% endfor %}
{% endfor %}
    steps:
    - uses: docker/setup-qemu-action@v1
      if: "matrix.platform == 'aarch64'"
      with:
        platforms: arm64
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - uses: actions/setup-python@v2
      with:
        python-version: {{ '${{ matrix.python }}' }}
        architecture: {{ '${{ matrix.python_arch }}' }}
    - name: install dependencies
      run: |
        python -mpip install --progress-bar=off twine tox cibuildwheel -r ci/requirements.txt
        virtualenv --version
        pip --version
        tox --version
        pip list --format=freeze

    - name: cibw build and test
      if: 'matrix.cibw_build'
      run: cibuildwheel
      env:
        CIBW_ARCHS: '{{ '${{ matrix.cibw_arch }}' }}'
        CIBW_BUILD: '{{ '${{ matrix.cibw_build }}' }}'
        CIBW_MANYLINUX_X86_64_IMAGE: manylinux1
        CIBW_TEST_REQUIRES: 'tox tox-direct'
        CIBW_TEST_COMMAND: 'cd {project}; tox --skip-pkg-install --direct-yolo -e {{ '${{ matrix.tox_env }}' }} -v'

    - name: regular build and test
      if: '!matrix.cibw_build'
      run: tox -e {{ '${{ matrix.tox_env }}' }} -v

    - name: check wheel
      if: 'matrix.cibw_build'
      run: '{{ 'twine check ${{ matrix.wheel_path }}/*.whl' }}'
    - name: upload wheel
      uses: actions/upload-artifact@v2
      if: 'matrix.cibw_build'
      with:
        path: 'wheelhouse/*.whl'
